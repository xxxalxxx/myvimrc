set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Bundle 'majutsushi/tagbar'
Plugin 'vim-scripts/Conque-GDB'
"Plugin 'Valloric/YouCompleteMe'
"Bundle 'Rip-Rip/clang_complete'
Plugin 'scrooloose/nerdtree'
Plugin 'ervandew/supertab'
call vundle#end()            
filetype plugin indent on  

set ignorecase " ignore case for searches 
set smartcase
" Press F4 to toggle highlighting on/off, and show current value.
:noremap <F4> :set hlsearch! hlsearch?<CR>


autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

aug QFClose
  au!
  au WinEnter * if winnr('$') == 1 && getbufvar(winbufnr(winnr()), "&buftype") == "quickfix"|q|endif
aug END

let g:clang_library_path='/usr/lib/llvm-3.9/lib'
let g:clang_periodic_quickfix=1
let g:clang_complete_copen=1
let g:clang_snippets=1
let g:clang_complete_optional_args_in_snippets=1
let g:clang_complete_patterns=1
let g:clang_complete_macros=1
let g:clang_auto_select=0
let g:clang_jumpto_declaration_key="<C-p>"
let g:clang_jumpto_back_key="<C-o>"

if has('gui_running')
    " GUI colors
	colorscheme visualstudio
else
    " Non-GUI (terminal) colors
    colorscheme lucius
	set listchars=tab:\|\ " show pipes for scopes
	set list
endif



map <F2> :call g:ClangUpdateQuickFix()<CR>
map <C-n> :NERDTreeToggle<CR>
nmap <F8> :TagbarToggle<CR>
map  <C-p> :tabn<CR>
map  <C-o> :tabp<CR>
map  <C-Right> :tabn<CR>
map  <C-Left> :tabp<CR>
set mouse=a " enable mouse for tabs and pasting etc
set number  " line numbers

syn on se title
set tabstop=4 softtabstop=4 shiftwidth=4

set noexpandtab

set completeopt-=preview " dont show scratchpad
set completeopt=longest,menuone

" inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
"   \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
" inoremap <expr> <M-,> pumvisible() ? '<C-n>' :
"  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

" inoremap <expr> <C-Space> pumvisible() \|\| &omnifunc == '' ?
" \ "\<lt>C-n>" :
" \ "\<lt>C-x>\<lt>C-o><c-r>=pumvisible() ?" .
" \ "\"\\<lt>c-n>\\<lt>c-p>\\<lt>c-n>\" :" .
" \ "\" \\<lt>bs>\\<lt>C-n>\"\<CR>"
" imap <C-@> <C-Space>

highlight SpecialKey ctermfg=249




augroup auto_comment
    au!
    au FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
augroup END

" set pastetoggle=<F2>

set clipboard=unnamedplus " work with non-default vim packages (vim-gnome)
set shortmess+=A " disable Swap file exists warnings

" ctrl-W + J (capped) -- move compilation errors window

set guioptions-=e " non-gui tabs

set nowrap " add scroll space instead of line breaks

set tags=/home/al/code/amvk/tags

function! DelTagOfFile(file)
  let fullpath = a:file
  let cwd = getcwd()
  let tagfilename = cwd . "/tags"
  let f = substitute(fullpath, cwd . "/", "", "")
  let f = escape(f, './')
  let cmd = 'sed -i "/' . f . '/d" "' . tagfilename . '"'
  let resp = system(cmd)
endfunction

function! UpdateTags()
  let f = expand("%:p")
  let cwd = getcwd()
  let tagfilename = cwd . "/tags"
  let cmd = 'ctags -a -f ' . tagfilename . ' --fields=+iaS --extra=+q ' . '"' . f . '"'
  call DelTagOfFile(f)
  let resp = system(cmd)
endfunction
autocmd BufWritePost *.cpp,*.h,*.c call UpdateTags()

" Ctrl + N for clang popup
